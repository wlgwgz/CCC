/*******************************************************************************
 Copyright (c) 广州市邦普电脑技术开发有限公司 All rights reserved.
 文件名称: inverter.h
 文件描述: 变频器通讯协议处理
           为应用层提供变频器操作接口，封装"变频器通讯协议"。
           使用时只需关注本h文件，无需关注c文件。
 创建人  : hzy
 创建日期: 2016.12.23
*******************************************************************************/

#ifndef INVERTER_H
    #define INVERTER_H

#ifdef INVERTER_GLOBAL
    #define INVERTER_EXT
#else 
    #define INVERTER_EXT extern
#endif



/************************************** 使用说明 *****************************************

1.前置工作
    1.1 在主模块初始化时，调用本模块初始化函数 invt_init()。
    1.2 在主模块处理100ms计时时，调用本模块计时函数 invt_timer_100ms()。
    1.3 在与变频器通讯的UART处理待发送modbus数据包时，调用 invt_modbus_master_trans()。
    1.4 在与变频器通讯的UART处理待接收modbus数据包时，调用 invt_modbus_master_recev()。
    
2.通讯规则
    采用模块机通讯程序结构，未使用通讯队列，invt_modbus_master_trans()每隔500ms向变频
器发起一次通讯。
    通讯优先级如下：
    2.1 若连续5秒没有读取过状态信息，则读取一次状态信息；
    2.2 否则若有待发送命令，则发送一次命令；
    2.3 否则若有参数读写需求，则读写一次参数；
    2.4 否则若连续30秒未读取过参数，则读取一次参数；
    2.5 否则若设定转速改变，则发送新设定转速；
    2.6 否则读取一次状态信息。

******************************************************************************************/
    //变频器序号/* N0004 */
    typedef enum
    {
        INVT_ID_1,          // 1#变频器
        INVT_FAN1,			/* 1#ec风机 */
        INVT_FAN2,			/* 2#ec风机 */
        INVT_ID_MAX         // 变频器个数
    }INVT_ID_ENUM;

//************************************** 函数 *****************************************

/*******************************************************************************
 函 数: invt_init()
 功 能: 初始化变频器通讯模块
        初始化内容：停止变频器输出，解锁频率及变速，读取一次参数。
 参 数: 空
 返 回: 空
 其 它: 在应用程序初始化中调用
*******************************************************************************/
void invt_init(void);

/*******************************************************************************
 函 数: invt_timer()
 功 能: 模块计时函数
 参 数: BOOL TimeFlag 时间标志（用参数传递，以免移植时100ms标志名称不同）
 返 回: 空
 其 它: 在100ms计时处理处调用
*******************************************************************************/
void invt_timer(BOOL TimeFlag);


//************************************** 命令 *****************************************

/*******************************************************************************
 函 数: invt_cmd_on()
 功 能: 发送开启命令
 参 数: 空
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_cmd_on(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_cmd_off()
 功 能: 发送停止命令
 参 数: 空
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_cmd_off(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_cmd_off_free()
 功 能: 发送自由停机命令
 参 数: 空
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_cmd_off_free(INVT_ID_ENUM id);


/*******************************************************************************
 函 数: invt_cmd_err_reset()
 功 能: 发送故障复位命令
 参 数: 空
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_cmd_err_reset(INVT_ID_ENUM id);





//************************************** 只读信息 *****************************************

/*******************************************************************************
 函 数: invt_info_is_running()
 功 能: 变频器运行状态
 参 数: 空
 返 回: TRUE/FALSE--运行中/非运行
 其 它: 空
*******************************************************************************/
BOOL invt_info_is_running(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_is_alarm()
 功 能: 变频器故障状态
 参 数: 空
 返 回: TRUE/FALSE--有故障/无故障
 其 它: 空
*******************************************************************************/
BOOL invt_info_is_alarm(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_version()
 功 能: 读取软件版本号
 参 数: 空
 返 回: 变频器软件版本号
 其 它: 空
*******************************************************************************/
U16 invt_info_version(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_function()
 功 能: 读取软件功能码
 参 数: 空
 返 回: 变频器软件功能码
 其 它: 空
*******************************************************************************/
U16 invt_info_function(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_freq_state()
 功 能: 查看变频器运行状态
 参 数: 空
 返 回: 变频器运行转速(0.01rps)
 其 它: 运行转速为变频器此刻的运行转速
*******************************************************************************/
U16 invt_info_freq_state(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_freq_run()
 功 能: 查看运行转速
 参 数: 空
 返 回: 变频器运行转速(0.01rps)
 其 它: 运行转速为变频器计算得到的当前时刻目标转速
*******************************************************************************/
U16 invt_info_freq_run(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_freq_arm()
 功 能: 查看设定转速
 参 数: 空
 返 回: 变频器设定转速(0.01rps)
 其 它: 设定转速为变频器接收到的给定转速
*******************************************************************************/
U16 invt_info_freq_arm(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_freq_now()
 功 能: 查看当前转速
 参 数: 空
 返 回: 变频器当前转速(0.01rps)
 其 它: 当前转速为变频器当前时刻的真实转速
*******************************************************************************/
U16 invt_info_freq_now(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_temperature()
 功 能: 查看变频模块温度
 参 数: 空
 返 回: 当前温度(0.1℃)
 其 它: 空
*******************************************************************************/
I16  invt_info_temperature(INVT_ID_ENUM id);


/*******************************************************************************
 函 数: invt_info_powerout()
 功 能: 查看变频模块输出功率
 参 数: 空
 返 回: 当前输出功率(0.01KW)
 其 它: 空
*******************************************************************************/
U16 invt_info_powerout(INVT_ID_ENUM id);


/*******************************************************************************
 函 数: invt_info_error_id()
 功 能: 查看故障号
 参 数: 空
 返 回: 变频器当前故障的故障号
 其 它: 只能查看到最早发生的故障，当同时存在多个故障时，只能等该故障复位后
        才能查看其它的故障。
*******************************************************************************/
#define INVT_ERR_ID_MIN     1    //变频器故障号最小值
#define INVT_ERR_ID_MAX     35   //变频器故障号最大值
#define INVT_ERR_ID_UNKNOWN 
U16 invt_info_error_id(INVT_ID_ENUM id);
void invt_clr_error_id(INVT_ID_ENUM id);
//故障号含义：
//  1 起动瞬间过流
//  2 加速运行过流
//  3 减速运行过流
//  4 恒速运行过流
//  5 加速运行过压
//  6 减速运行过压
//  7 恒速运行过压
//  8 待机时过压
//  9 运行中欠压
// 10 输入缺相
// 11 输出缺相
// 12 功率器件保护
// 13 变频器过热
// 14 变频器过载
// 15 电机过载
// 16 备用
// 17 电机负载过重
// 18 电机速度过大
// 19 电机D轴电流过大
// 20 电机Q轴电流过大
// 21 参数存储失败
// 22 通讯异常
// 23 电流检测故障
// 24 备用
// 25 启动中电机堵转
// 26 运行中电机堵转
// 27 散热温度检测故障
// 28 失速故障
// 29 中断溢出1
// 30 中断溢出2
// 31 启动中转子抖动过大
// 32 运行中转子抖动过大
/*******************************************************************************
 函 数: invt_info_errorcode1_id()
 功 能: 查看故障号
 参 数: 空
 返 回: 变频器当前故障的故障号
 其 它: 只能查看到最早发生的故障，当同时存在多个故障时，只能等该故障复位后
        才能查看其它的故障。
*******************************************************************************/
U16 invt_info_errorcode1_id(INVT_ID_ENUM id);
/*******************************************************************************
 函 数: invt_info_errorcode2_id()
 功 能: 查看故障号
 参 数: 空
 返 回: 变频器当前故障的故障号
 其 它: 只能查看到最早发生的故障，当同时存在多个故障时，只能等该故障复位后
        才能查看其它的故障。
*******************************************************************************/
U16 invt_info_temp_pfc(INVT_ID_ENUM id);
/*******************************************************************************
 函 数: invt_info_freq_limit_id()
 功 能: 查看限频信息
 参 数: 空
 返 回: 限频信息
 其 它: 
*******************************************************************************/
U16 invt_info_freq_limit_id(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_current_out()
 功 能: 查看输出电流
 参 数: 空
 返 回: 变频器当前输出电流
 其 它: 空
*******************************************************************************/
U16 invt_info_current_out(INVT_ID_ENUM id);
/*******************************************************************************
 函 数: invt_info_torque_out()
 功 能: 查看输出转矩
 参 数: 空
 返 回: 变频器当前输出转矩
 其 它: 空
*******************************************************************************/
U16 invt_info_torque_out(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_voltage_out()
 功 能: 查看输出电压
 参 数: 空
 返 回: 变频器当前输出电压
 其 它: 空
*******************************************************************************/
U16 invt_info_voltage_out(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_volt_generatrix()
 功 能: 查看母线电压
 参 数: 空
 返 回: 变频器当前母线电压
 其 它: 空
*******************************************************************************/
U16 invt_info_volt_generatrix(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_pulse_ec1()
 功 能: 查看ec1脉冲数
 参 数: id--; 
 返 回: 
 其 它: 空
*******************************************************************************/
U16 invt_info_pulse_ec1(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_info_pulse_ec2()
 功 能: 查看ec2脉冲数
 参 数: id--; 
 返 回: 
 其 它: 空
*******************************************************************************/
U16 invt_info_pulse_ec2(INVT_ID_ENUM id);


U16 invt_info_pulse_ec_filt(INVT_ID_ENUM invt_id, U08 fan_id);


/*******************************************************************************
 函 数: invt_get_device_addr()
 功 能: 读取变频器设备地址
 参 数: 空 
 返 回: 变频器设备地址
 其 它: 空
*******************************************************************************/
U08 invt_get_device_addr(INVT_ID_ENUM id);


/*******************************************************************************
 函 数: invt_cmd_get_addr()
 功 能: 访问变频器通讯指令的地址
 参 数: 空 
 返 回: 变频器通讯指令的地址
 其 它: 空
*******************************************************************************/
U16 invt_cmd_get_addr(void);

/*******************************************************************************
 函 数: invt_cmd_get_size()
 功 能: 访问变频器通讯指令的大小（字）
 参 数: 空 
 返 回: 变频器通讯指令的大小
 其 它: 空
*******************************************************************************/
U08 invt_cmd_get_size(void);

/*******************************************************************************
 函 数: invt_paras_get_buf()
 功 能: 读取变频器基本参数的存储位置
 参 数: 空 
 返 回: 空
 其 它: 空
*******************************************************************************/
U16* invt_cmd_get_buf(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_paras_get_addr()
 功 能: 访问变频器基本参数的地址
 参 数: 空 
 返 回: 变频器基本参数的地址
 其 它: 空
*******************************************************************************/
U16 invt_paras_get_addr(void);

/*******************************************************************************
 函 数: invt_paras_get_size()
 功 能: 访问变频器基本参数的大小（字）
 参 数: 空 
 返 回: 变频器基本参数的大小
 其 它: 空
*******************************************************************************/
U08 invt_paras_get_size(void);

/*******************************************************************************
 函 数: invt_paras_get_buf()
 功 能: 读取变频器基本参数的存储位置
 参 数: 空 
 返 回: 空
 其 它: 空
*******************************************************************************/
U16* invt_paras_get_buf(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_paras_fa_get_buf()
 功 能: FA参数
 参 数: 空 
 返 回: 空
 其 它: 空
*******************************************************************************/
U16* invt_paras_fa_get_buf(INVT_ID_ENUM id);
void invt_paras_fa_backup(INVT_ID_ENUM id, U08 index);
U16  invt_paras_fa_get_addr(void);
U08  invt_paras_fa_get_size(void);
U16  invt_para_fa_isChanged(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_paras_fb_get_buf()
 功 能: FB参数
 参 数: 空 
 返 回: 空
 其 它: 空
*******************************************************************************/
U16* invt_paras_fb_get_buf(INVT_ID_ENUM id);
void invt_paras_fb_backup(INVT_ID_ENUM id, U08 index);
U16  invt_paras_fb_get_addr(void);
U08  invt_paras_fb_get_size(void);
U16  invt_para_fb_isChanged(INVT_ID_ENUM id);

U16* invt_paras_fp_get_buf(INVT_ID_ENUM id);
U16  invt_paras_fp_get_addr(void);
U08  invt_paras_fp_get_size(void);

U16* invt_paras_f10_get_buf(INVT_ID_ENUM id);
void invt_paras_f10_backup(INVT_ID_ENUM id, U08 index);
U16  invt_paras_f10_get_addr(void);
U08  invt_paras_f10_get_size(void);
U16  invt_para_f10_isChanged(INVT_ID_ENUM id);

U16* invt_paras_f9_get_buf(INVT_ID_ENUM id);
void invt_paras_f9_backup(INVT_ID_ENUM id, U08 index);
U16  invt_paras_f9_get_addr(void);
U08  invt_paras_f9_get_size(void);
U16  invt_para_f9_isChanged(INVT_ID_ENUM id);

U16* invt_paras_f6_get_buf(INVT_ID_ENUM id);
void invt_paras_f6_backup(INVT_ID_ENUM id, U08 index);
U16 invt_paras_f6_get_addr(void);
U08 invt_paras_f6_get_size(void);
U16 invt_para_f6_isChanged(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_states_get_addr()
 功 能: 读取变频器状态的地址
 参 数: 空 
 返 回: 变频器状态的地址
 其 它: 空
*******************************************************************************/
U16 invt_states_get_addr(void);

/*******************************************************************************
 函 数: invt_states_get_size()
 功 能: 读取变频器状态的大小（字）
 参 数: 空 
 返 回: 变频器状态的大小
 其 它: 空
*******************************************************************************/
U08 invt_states_get_size(void);

/*******************************************************************************
 函 数: invt_states_get_buf()
 功 能: 读取变频器状态的存储位置
 参 数: 空 
 返 回: 变频器状态的存储位置
 其 它: 空
*******************************************************************************/
U16* invt_states_get_buf(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_cmd_isChanged()
 功 能: 判断变频器命令是否有修改
 参 数: INVT_ID_ENUM id--变频器序号; 
 返 回: FALSE:无修改；其它:修改的命令序号+1
 其 它: 空
*******************************************************************************/
U08 invt_cmd_isChanged(INVT_ID_ENUM id);


/*******************************************************************************
 函 数: invt_set_rps_out()
 功 能: 设置目标输出转速(经过转速上限、下限限制)
 参 数: freq_new--输出转速(0.01rps); 
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_set_rps_out(INVT_ID_ENUM id, U16 freq_new);

/*******************************************************************************
 函 数: invt_get_rps_out()
 功 能: 获取目标输出转速(经过转速上限、下限限制)
 参 数: id--变频器ID; 
 返 回: 空
 其 它: 空
*******************************************************************************/
I16 invt_get_rps_out(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_set_rps_ec()
 功 能: 设置目标ec转速
 参 数: freq_new--目标ec转速(0～100%); 
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_set_rps_ec(INVT_ID_ENUM id, U08 ec, U16 freq_new);

/*******************************************************************************
 函 数: invt_get_rps_ec()
 功 能: 获取目标ec转速
 参 数: id--变频器ID; 
 返 回: 空
 其 它: 空
*******************************************************************************/
I16 invt_get_rps_ec(INVT_ID_ENUM id, U08 ec);



//************************************** 只写信息 ***************************************

/*******************************************************************************
 函 数: invt_cmd_backup()
 功 能: 判断变频器命令是否有修改
 参 数: INVT_ID_ENUM id--变频器序号; 
 返 回: 0xFF:无修改；其它:修改的命令序号
 其 它: 空
*******************************************************************************/
void invt_cmd_backup(INVT_ID_ENUM id, U08 index);

/*******************************************************************************
 函 数: invt_para_isChanged()
 功 能: 判断变频器参数是否有修改
 参 数: INVT_ID_ENUM id--变频器序号; 
 返 回: FALSE:无修改；其它:修改的参数序号+1
 其 它: 空
*******************************************************************************/
U16 invt_para_isChanged(INVT_ID_ENUM id);


/*******************************************************************************
 函 数: invt_paras_backup()
 功 能: 变频器参数修改后取消修改标志
 参 数: INVT_ID_ENUM id--变频器序号; U08 index--参数序号
 返 回: 0xFF:无修改；其它:修改的命令序号
 其 它: 空
*******************************************************************************/
void invt_paras_backup(INVT_ID_ENUM id, U08 index);



//************************************** 参数信息 ***************************************
//变频器参数
//F00基础参数
#define F00_FREQ_MAX      7   //频率上限
#define F00_FREQ_MIN      8   //频率下限
#define F00_PARA_INIT     11  //参数初始化
#define F00_MOTOR_TYPE    12  //电机型号
#define F00_VERSION       14  //软件版本号
#define F00_FUNCTION      15  //功能码版本号
#define F00_MAX           16  //F00最大参数个数
INVERTER_EXT I16 invt_para[INVT_ID_MAX][F00_MAX];
//参数值被更改
INVERTER_EXT U08 fg_para_changed[INVT_ID_MAX][F00_MAX];

//F6参数
#define INVT_ADDR_RW_PARA_F6    0x0600  // F6参数起始地址
#define F6_00_EC_PWM_SW_FREQ    0       // ec风机PWM开关频率选择
#define F6_MAX                  1       // F6最大参数个数
#define F6_ADDR(f6)             (INVT_ADDR_RW_PARA_F6+f6)
INVERTER_EXT I16 invt_para_f6[INVT_ID_MAX][F6_MAX];
INVERTER_EXT U08 fg_para_f6_changed[INVT_ID_MAX][F6_MAX]; //F6参数值被更改

//F9参数
#define INVT_ADDR_RW_PARA_F9    0x0900  // F9参数起始地址
#define F9_EC_FAN_NUM           0       // EC风机个数
#define F9_MAX                  1       // F9最大参数个数
#define F9_ADDR(f9) (INVT_ADDR_RW_PARA_F9+f9)
INVERTER_EXT I16 invt_para_f9[INVT_ID_MAX][F9_MAX];
INVERTER_EXT U08 fg_para_f9_changed[INVT_ID_MAX][F9_MAX]; //F9参数值被更改

//F10参数
#define INVT_ADDR_RW_PARA_F10        0x1000  // F10参数起始地址
#define F10_POWER                    0x0002  // 功率等级   
#define F10_MAX                      10      // F10最大参数个数
#define F10_ADDR(f10) (INVT_ADDR_RW_PARA_F10+f10)
INVERTER_EXT I16 invt_para_f10[INVT_ID_MAX][F10_MAX];
INVERTER_EXT U08 fg_para_f10_changed[INVT_ID_MAX][F10_MAX]; //F10参数值被更改

//FA参数
#define INVT_ADDR_RW_PARA_FA    0x0a00  // FA参数起始地址
#define FA_FREQ_POLE             2      // 电机极数
#define FA_MAX_CUR_LMT          27      // 变频最大电流限制
#define FA_FREQ_START_TIME      60      // 开机给定频率1运行时间
#define FA_FREQ_START           64      // 开机给定频率1
#define FA_FREQ_START2          65      // 开机给定频率2
#define FA_MAX                  66      // FA最大参数个数
#define FA_NUM1                 40      // FA参数段1:变频器一次不能访问太多，需分段访问
#define FA_ADDR(fa) (INVT_ADDR_RW_PARA_FA+fa)
INVERTER_EXT I16 invt_para_fa[INVT_ID_MAX][FA_MAX];
INVERTER_EXT U08 fg_para_fa_changed[INVT_ID_MAX][FA_MAX]; //FA参数值被更改

//FB参数
#define INVT_ADDR_RW_PARA_FB        0x0b00  // FB参数起始地址
#define FB_MAX_LOAD_TIME            5       // 变频负载过重时间  
#define FB_BLOCKAGE_TIME            9       // 变频堵转降速时间  
#define FB_MAX                      10      // FA最大参数个数
#define FB_ADDR(fb) (INVT_ADDR_RW_PARA_FB+fb)
INVERTER_EXT I16 invt_para_fb[INVT_ID_MAX][FB_MAX];
INVERTER_EXT U08 fg_para_fb_changed[INVT_ID_MAX][FB_MAX]; //FB参数值被更改

//FP参数
#define INVT_ADDR_RW_PARA_FP        0x1100  // FP参数起始地址
#define FP_MAX                      20      // FP最大参数个数
#define FP_ADDR(fp) (INVT_ADDR_RW_PARA_FP+fp)
INVERTER_EXT I16 invt_para_fp[INVT_ID_MAX][FP_MAX];

// 禁用/使用有源PFC
#define INVT_ADDR_RW_PARA_PFC_EN    0x3204  // 禁用/使用有源PFC
INVERTER_EXT I16 invt_para_pfc_en[INVT_ID_MAX];
INVERTER_EXT U08 fg_para_pfc_en_changed[INVT_ID_MAX];

//无效参数值
#define INVT_PARA_VALUE_NULL        -32700
//参数号
typedef enum tagINVT_PARA_ID
{
    INVT_PARA_MOTOR_TYPE,     // 电机型号(0:松下6TD075X；1:松下5SS072X；2:三菱MNB42FX)
    INVT_PARA_FREQ_MAX,       // 转速上限(0.01rps)
    INVT_PARA_FREQ_MIN,       // 转速下限(0.01rps)
    INVT_PARA_FREQ_START,     // 驱动开机转速(0.01rps)
    INVT_PARA_POLE,           // 电机极数
    INVT_PARA_POWER,          // 功率等级：仅开放到测试程序
    INVT_PARA_EC_NUM,         // EC风机个数
    INVT_PARA_EC_PWM_SW_FREQ, // EC风机PWM开关频率
    INVT_PARA_MAX
}INVT_PARA_ID;

/*******************************************************************************
 函 数: invt_para_read()
 功 能: 参数读取
 参 数: para_id--参数号; 
 返 回: 参数值
 其 它: 空
*******************************************************************************/
#define PARA_READ_INTRVL    10      //参数读取间隔
I16 invt_para_read(INVT_ID_ENUM id, INVT_PARA_ID para_id);

/*******************************************************************************
 函 数: invt_cmd_para_read()
 功 能: 发送参数读取命令
 参 数: 空
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_cmd_para_read(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_cmd_pfc_off()
 功 能: 发送禁用有源PFC命令
 参 数: id--; 
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_cmd_pfc_off(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_cmd_pfc_on()
 功 能: 发送使用有源PFC命令
 参 数: id--; 
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_cmd_pfc_on(INVT_ID_ENUM id);

/*******************************************************************************
 函 数: invt_para_set()
 功 能: 改写一个参数的值
 参 数: para_id--参数号; 
		para_value--参数值; 
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_para_set(INVT_ID_ENUM id, INVT_PARA_ID para_id, I16 para_value);

/*******************************************************************************
 函 数: invt_para_init()
 功 能: 初始化变频器参数
 参 数: 空
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_para_init(void);

/*******************************************************************************
 函 数: invt_err_reset()
 功 能: 变频器故障复位
 参 数: 空
 返 回: 空
 其 它: 空
*******************************************************************************/
void invt_err_reset(void);

#define INVT_MODEL_MAX	1000
/* N0004 */
#define INVT_MODEL_FAN_MAX	1000

typedef struct tagINVT_AD
{
    U16 ad_u;          
    U16 ad_v;          
}INVT_AD;
INVERTER_EXT INVT_AD invt_ad[INVT_ID_MAX];
#define INVT_ADDR_AD                0X121B	/* 4635 三相中的两相AD值 */
#define INVT_AD_SIZE                (sizeof(INVT_AD)/sizeof(U16))

INVERTER_EXT U16 invt_curr_wave[INVT_ID_MAX];
#define INVT_ADDR_CUR_WAVE          0X0D09	/* 3337 电流纹波 */
#define INVT_CUR_WAVE_SIZE          (1)

INVERTER_EXT U16 invt_ec_fan_fg[INVT_ID_MAX];
#define INVT_ADDR_EC_FAN_FG          0X0601	/* 1537 ec风机指令电压分辨率 */
#define INVT_EC_FAN_FG_SIZE          (1)

#define COMP_CLOSE_FREQ_DIFF    50        // 频率偏差 0.01rps

#endif

