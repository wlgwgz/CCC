/*******************************************************************************
 Copyright (c) 广州市邦普电脑技术开发有限公司 All rights reserved.
 文件名称: pid.h
 文件描述: 简化版PID算法库
           为应用层提供PID计算接口，封装"PID算法"。
           使用时只需关注本h文件，无需关注c文件。
 创建人  : hzy
 创建日期: 2017.02.08
*******************************************************************************/

#ifndef PIDT_H
    #define PIDT_H

#ifdef  PIDT_GLOBALS
    #define PIDT_EXT
#else
    #define PIDT_EXT extern
#endif





/************************************** 使用说明 *****************************************

1.前置工作
    1.1 在主模块初始化时，调用本模块初始化函数 pid_init()。
    1.2 在主模块处理100ms计时时，调用本模块计时函数 pid_timer()。
    1.3 在主循环中调用 pid_prog()。
    
2.函数调用
    2.1 应用层通过调用pid_turn_xxx()开启关闭PID计算。
    2.2 调用pid_set_xxx()来设置PID参数。
    2.3 调用pid_read_Uk()来对计算得到的作用值。
3.公式参考
    3.1 原公式：Ut = Kp・e(t) ＋ (1/Ti)・∫e(t) d t ＋ Td・[d e(t)/d t]
    3.2 位置式：Uk = Kp・e(k) ＋ (Ts/Ti)・∑e(n) ＋ (Td/Ts)・[e(k) - e(k-1)]
    3.3 增量式：Uk = Kp・[e(k) - e(k-1)] ＋ (Ts/Ti)・e(k) ＋ (Td/Ts)・[e(k) - 2e(k-1) ＋ e(k-2)]
   
3.本模块由X1.HL017A.K05.005-1.V100A07中的PID.c更改而来，拆分成eev.c和pid.c。因为
  需要与原控制结果保持一致，所以代码并非完全规范。若用于替换其它微码的PID.c，还需
  做差异对比并适当修改。
******************************************************************************************/




typedef enum    //PID序号
{
    PID_ID_EEV_1, //  //1#电子膨胀阀主路
    PID_ID_EEV_2, //  //2#电子膨胀阀辅路
    PID_ID_INVT_1,   //1#变频压机
    PID_ID_MAX      //PID数量
}PID_ID_ENUM;

typedef enum    //控制算法
{
    PID_CTRL_POSITION,   //位置式
    PID_CTRL_INCREMENT,  //增量式
    PID_CTRL_FUZZY,      //模糊式
    PID_CTRL_MAX         //算法数量
}PID_CTRL_ENUM; 

#define AVG_ACROSS_NUM   6	 /* 关闭加速穿过次数 */
#define AVG_ACROSS_NUM2  12	 /* 进入参考开度 */

//************************************** 函数 *****************************************

/*******************************************************************************
 函 数: pid_init()
 功 能: pid参数初始化
 参 数: 空
 返 回: 空
 其 它: 应用程序需要在此初始化之后才能设置pid参数，否则会被初始化覆盖
*******************************************************************************/
void pid_init(void);

/*******************************************************************************
 函 数: pid_timer()
 功 能: 模块计时函数
 参 数: 空
 返 回: 空
 其 它: 在100ms计时处理处调用
*******************************************************************************/
void pid_timer(BOOL TimeFlag);


/*******************************************************************************
 函 数: pid_prog()
 功 能: pid主调度程序
 参 数: 空
 返 回: 空
 其 它: 在主循环中调用
*******************************************************************************/
void pid_prog(void);

/*******************************************************************************
 函 数: pid_turn_on()
 功 能: 开启PID计算
 参 数: id--PID序号;
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_turn_on(PID_ID_ENUM id);

/*******************************************************************************
 函 数: pid_turn_off()
 功 能: 关闭PID计算
 参 数: id--PID序号;
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_turn_off(PID_ID_ENUM id);

/*******************************************************************************
 函 数: pid_read_Uk()
 功 能: 读取PID作用值
 参 数: id--PID序号; 
 返 回: PID作用值
 其 它: 增量式或模糊式的作用值在每次读取后会清零
*******************************************************************************/
I16 pid_read_Uk(PID_ID_ENUM id);

/*******************************************************************************
 函 数: pid_read_FgMaxUi()
 功 能: 读取PID作用值变速积分积累到最大值标志
 参 数: id--PID序号; 
 返 回: 1:变速积分到达最大值  0:变速积分没有到达最大值
 其 它: 增量式或模糊式的作用值在每次读取后会清零
*******************************************************************************/
I16 pid_read_FgMaxUi(PID_ID_ENUM id);

/*******************************************************************************
 函 数: pid_set_ctrl()
 功 能: 设置控制算法
 参 数: id--PID序号; 
        value--算法; 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_ctrl(PID_ID_ENUM id, PID_CTRL_ENUM value);

/*******************************************************************************
 函 数: pid_set_pv()
 功 能: 设置控制源
 参 数: id--PID序号; 
        value--控制点指针; 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_pv(PID_ID_ENUM id, I16* p_pv);

/*******************************************************************************
 函 数: pid_set_sv()
 功 能: 设置目标值
 参 数: id--PID序号; 
        value--目标值指针; 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_sv(PID_ID_ENUM id, I16* p_sv);

/*******************************************************************************
 函 数: pid_set_Ts()
 功 能: 设置采样周期
 参 数: id--PID序号; 
        value--采样周期(100ms); 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_Ts(PID_ID_ENUM id, I16 value);

/*******************************************************************************
 函 数: pid_set_Kp()
 功 能: 设置比例系数
 参 数: id--PID序号; 
        value--比例系数; 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_Kp(PID_ID_ENUM id, I16 value);

/*******************************************************************************
 函 数: pid_set_Ti()
 功 能: 设置积分时间
 参 数: id--PID序号; 
        value--积分时间(100ms); 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_Ti(PID_ID_ENUM id, I16 value);

/*******************************************************************************
 函 数: pid_set_Td设置微分时间()
 功 能: 设置微分时间
 参 数: id--PID序号; 
        value--微分时间(100ms); 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_Td(PID_ID_ENUM id, I16 value);

/*******************************************************************************
 函 数: pid_set_Kc()
 功 能: 设置反作用比例带
 参 数: id--PID序号; 
        value--比例带大小(单边); 
 返 回: TRUE/FALSE--成功/失败
 其 它: 此"反作用比例带"用作限定作用值Uk大小(位置式)或UK变化量(增量式模糊式)
*******************************************************************************/
BOOL pid_set_Kc(PID_ID_ENUM id, I16 value);

/*******************************************************************************
 函 数: pid_get_Kc()
 功 能: 获取反作用比例带
 参 数: id--PID序号; 
 返 回: 比例带
 其 它: 
*******************************************************************************/
I16 pid_get_Kc(PID_ID_ENUM id);


/*******************************************************************************
 函 数: pid_set_Ai()
 功 能: 设置变速积分常数
 参 数: id--PID序号; 
        value--变速积分常数; 
 返 回: TRUE/FALSE--成功/失败
 其 它: 空
*******************************************************************************/
BOOL pid_set_Ai(PID_ID_ENUM id, I16 value);
/*******************************************************************************
 函 数: pid_set_AveAcrossCnt()
 功 能: 设置穿过设定温度次数
 参 数: id--PID序号; 
        value--变速积分常数; 
 返 回: TRUE/FALSE--成功/失败
 其 它:
*******************************************************************************/
BOOL pid_set_AveAcrossCnt(PID_ID_ENUM id, I16 value);
U16 pid_get_AveAcrossCnt(PID_ID_ENUM id);
U16 pid_get_avemod(PID_ID_ENUM id);

/*******************************************************************************
 函 数: pid_read_AveAcrossCnt()
 功 能: 读取PID穿过设定温度次数
 参 数: id--PID序号; 
 返 回: PID作用值
 其 它: 
*******************************************************************************/
U16 pid_read_AveAcrossCnt(PID_ID_ENUM id);
/*******************************************************************************
 函 数: pid_read_AveAcrossCnt()
 功 能: 根据环境温度是否剧烈波动判断是否要重新加速控制
               判断温度剧烈波动依据环境温度在10分钟内波动了5℃及以上
               主要是适应客户在实验室测试时环温测试条件的变化
 参 数: judgetemp  当前环境温度单位0.1℃; 
 返 回:环境温度是否满足重新加速条件
 其 它:  
*******************************************************************************/
void pid_environ_aveflexible(I16 judgetemp,U08 updatafg);


enum
{
    DEBUG_UK,   //PID作用值
    DEBUG_UP,   //比例项
    DEBUG_UI,   //积分项
    DEBUG_UD,   //微分项
    DEBUG_PID_E1, //当前偏差
    DEBUG_PID_EC1, //偏差变化率
    DEBUG_PID_EC2, //偏差变化率
    DEBUG_PID_1UI, //变速值1
    DEBUG_PID_2UI, //变速值2
    DEBUG_STEP, //增量步数
    DEBUG_PID_SV, //目标值
    DEBUG_PID_PV, //当前值
    DEBUG_PID_USE, //PID是否使用
    DEBUG_PID_MIDDL,  //PID运算中间变量
    DEBUG_PID_MAX, 
};

PIDT_EXT I16 DebugPID[DEBUG_PID_MAX]; //主路PID
PIDT_EXT I16 DebugEEV_ID_2PID[DEBUG_PID_MAX];//辅路PID
PIDT_EXT I16 DebugINVT_ID_1PID[DEBUG_PID_MAX];//压机PID


#endif 
